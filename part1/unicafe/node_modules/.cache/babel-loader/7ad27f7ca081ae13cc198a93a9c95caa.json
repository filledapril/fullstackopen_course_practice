{"ast":null,"code":"var _jsxFileName = \"/Users/filledapril/Desktop/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.handleGoodClick,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.handleNeuClick,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.handleBadClick,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\n\nconst StatisticLine = _ref => {\n  let {\n    text,\n    value\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = StatisticLine;\n\nconst Statistics = props => {\n  if (props.total === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"good\",\n        value: props.good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"neutral\",\n        value: props.neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"bad\",\n        value: props.bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"all\",\n        value: props.total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"average\",\n        value: props.avg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"positve\",\n        value: props.positive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [point, setPoint] = useState([]); // save clicks of each button to its own state\n\n  const handleGoodClick = () => {\n    setGood(good + 1);\n    setTotal(total + 1);\n    setPoint(point.concat(\"1\"));\n  };\n\n  const handleNeuClick = () => {\n    setNeutral(neutral + 1);\n    setTotal(total + 1);\n    setPoint(point.concat(\"0\"));\n  };\n\n  const handleBadClick = () => {\n    setBad(bad + 1);\n    setTotal(total + 1);\n    setPoint(point.concat(\"-1\"));\n  };\n\n  const avg = point.reduce((sum, curr) => sum + Number(curr), 0) / point.length;\n  const positive = 100 * good / total + \"%\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleGoodClick: handleGoodClick,\n      handleNeuClick: handleNeuClick,\n      handleBadClick: handleBadClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      total: total,\n      avg: avg,\n      positive: positive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"gG89DFhtFelPJr6RrSdJBb4UY9c=\");\n\n_c4 = App;\n{\n  /*--------------------1d------------------------\n   const History = (props) => {\n   if (props.allClicks.length === 0) {\n     return (\n       <div>\n         the app is used by pressing the buttons\n       </div>\n     )\n   }\n   return (\n     <div>\n       button press history: {props.allClicks.join(' ')}\n     </div>\n   )\n  }\n  const Button = ({handleClick, text}) => (\n       <button onClick={handleClick}>\n       {text}\n       </button>\n  )\n  const App = () => {\n   const [left, setLeft] = useState(0)\n   const [right, setRight] = useState(0)\n   const [allClicks, setAll] = useState([])\n    const handleLeftClick = () => {\n     setAll(allClicks.concat('L'))\n     setLeft(left + 1)\n   }\n    const handleRightClick = () => {\n     setAll(allClicks.concat('R'))\n     setRight(right + 1)\n   }\n    return (\n     <div>\n       {left}\n       <Button handleClick={handleLeftClick} text=\"left\"/>\n       <Button handleClick={handleRightClick} text=\"right\"/>\n       {right}\n       <History allClicks={allClicks}/>\n     </div>\n   )\n  }\n  */\n}\n{\n  /* ------------------------1c-------------------------------\n  const App = () => {\n   const [ counter, setCounter ] = useState(0);\n    const increaseByOne = () => setCounter(counter + 1);\n   const decreaseByOne = () => setCounter(counter - 1);\n   const setToZero = () => setCounter(0);\n     return (\n      <div>\n        <Display counter={counter}/>\n        <Button\n          onClick={increaseByOne}\n          text='plus'\n        />\n        <Button\n          onClick={setToZero}\n          text='zero'\n        />\n        <Button\n          onClick={decreaseByOne}\n          text='minus'\n        />\n      </div>\n    )\n  }\n  //simplyfied component\n  const Display = ({ counter }) => <div>{counter}</div>\n  \n  const Button = ({onClick, text}) => (\n     <button onClick={onClick}>\n       {text}\n     </button>\n   )\n  /*}\n  \n  {/* ------------------1.1-1.5-----------------------\n   const App = () => {\n   const course = {\n     name: 'Half Stack application development',\n     parts: [\n       {\n         name: 'Fundamentals of React',\n         exercises: 10\n       },\n       {\n         name: 'Using props to pass data',\n         exercises: 7\n       },\n       {\n         name: 'State of a component',\n         exercises: 14\n       }\n     ]\n   }\n  const courseName = course.name;\n  //get object-parts from course array\n  const partsArr = course.parts;\n  //get value of object from parts array\n  const contentName = partsArr.map(a => a.name);\n  const contentExercise = partsArr.map(a => a.exercises);\n  //exercises total calculation\n  let total = 0;\n  contentExercise.forEach((num) => total += num)\n  {/*const [part1, part2, part3] = partsArr;\n  const total = part1.exercises + part2.exercises + part3.exercises;*/\n}\n{\n  /*\n   return (\n     <div>\n      <Header course={courseName}/>\n      <Content contentName={contentName} contentExercise={contentExercise} />\n      <Total partsTotal={total}/>\n     </div>\n   )}\n  const Header = (props) =>{\n   console.log(props)\n     return(\n       <div>\n         <h3>Course Name: {props.course}</h3>\n       </div>\n     )}\n  \n  const Content = (props) =>{\n   console.log(props)\n     return(\n   <div>\n     <p>{props.contentName[0]}: {props.contentExercise[0]}</p>\n     <p>{props.contentName[1]}: {props.contentExercise[1]}</p>\n     <p>{props.contentName[2]}: {props.contentExercise[2]}</p>\n   </div>\n     )}\n  const Total = (props) =>{\n     return(\n       <div>\n         <p>This course has totally {props.partsTotal} exercises.</p>\n       </div>\n     )}\n  */\n} // export default App\n\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","Button","props","handleGoodClick","handleNeuClick","handleBadClick","StatisticLine","text","value","Statistics","total","good","neutral","bad","avg","positive","App","setGood","setNeutral","setBad","setTotal","point","setPoint","concat","reduce","sum","curr","Number","length"],"sources":["/Users/filledapril/Desktop/part1/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = (props) =>{\n  return(\n    <div>\n    <button onClick={props.handleGoodClick}>good</button>\n    <button onClick={props.handleNeuClick}>neutral</button>\n    <button onClick={props.handleBadClick}>bad</button>\n    </div>\n)}\n\nconst StatisticLine = ({text, value}) =>(\n    <tr>\n      <td>{text}</td>\n      <td>{value}</td>\n    </tr>\n  )\n\nconst Statistics = (props) =>{\n  if (props.total === 0) {\n    return (\n      <div>\n        No feedback given\n      </div>\n    )\n  }\n    return(\n        <table>\n          <tbody>\n            <StatisticLine text=\"good\" value={props.good} />\n            <StatisticLine text=\"neutral\" value={props.neutral} />\n            <StatisticLine text=\"bad\" value={props.bad} />\n            <StatisticLine text=\"all\" value={props.total}/>\n            <StatisticLine text=\"average\" value={props.avg}/>\n            <StatisticLine text=\"positve\" value={props.positive} />\n          </tbody>\n        </table>\n  )}\n\n\nconst App = () => {\n\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const[total, setTotal] = useState(0)\n  const[point, setPoint] = useState([])\n\n  // save clicks of each button to its own state\n  const handleGoodClick = () =>{\n    setGood(good + 1)\n    setTotal(total + 1)\n    setPoint(point.concat(\"1\"))\n  }\n\n  const handleNeuClick = () =>{\n    setNeutral(neutral + 1)\n    setTotal(total + 1)\n    setPoint(point.concat(\"0\"))\n  }\n\n  const handleBadClick = () =>{\n    setBad(bad + 1)\n    setTotal(total + 1)\n    setPoint(point.concat(\"-1\"))\n  }\n\n  const avg =\n      point.reduce((sum, curr) => sum + Number(curr), 0) /\n      point.length;\n\n  const positive = (100 * good) /total + \"%\";\n\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <Button handleGoodClick={handleGoodClick}\n        handleNeuClick={handleNeuClick}\n        handleBadClick={handleBadClick}\n        />\n      <h2>Statistics</h2>\n      <Statistics good={good} neutral={neutral} bad={bad} total={total} avg={avg} positive={positive}/>\n    </div>\n  )\n}\n\n\n{/*--------------------1d------------------------\n  const History = (props) => {\n  if (props.allClicks.length === 0) {\n    return (\n      <div>\n        the app is used by pressing the buttons\n      </div>\n    )\n  }\n  return (\n    <div>\n      button press history: {props.allClicks.join(' ')}\n    </div>\n  )\n}\n\nconst Button = ({handleClick, text}) => (\n      <button onClick={handleClick}>\n      {text}\n      </button>\n)\n\nconst App = () => {\n  const [left, setLeft] = useState(0)\n  const [right, setRight] = useState(0)\n  const [allClicks, setAll] = useState([])\n\n  const handleLeftClick = () => {\n    setAll(allClicks.concat('L'))\n    setLeft(left + 1)\n  }\n\n  const handleRightClick = () => {\n    setAll(allClicks.concat('R'))\n    setRight(right + 1)\n  }\n\n  return (\n    <div>\n      {left}\n      <Button handleClick={handleLeftClick} text=\"left\"/>\n      <Button handleClick={handleRightClick} text=\"right\"/>\n      {right}\n      <History allClicks={allClicks}/>\n    </div>\n  )\n}\n*/}\n\n{/* ------------------------1c-------------------------------\nconst App = () => {\n  const [ counter, setCounter ] = useState(0);\n\n  const increaseByOne = () => setCounter(counter + 1);\n  const decreaseByOne = () => setCounter(counter - 1);\n  const setToZero = () => setCounter(0);\n\n   return (\n     <div>\n       <Display counter={counter}/>\n       <Button\n         onClick={increaseByOne}\n         text='plus'\n       />\n       <Button\n         onClick={setToZero}\n         text='zero'\n       />\n       <Button\n         onClick={decreaseByOne}\n         text='minus'\n       />\n     </div>\n   )\n}\n//simplyfied component\nconst Display = ({ counter }) => <div>{counter}</div>\n\n\nconst Button = ({onClick, text}) => (\n    <button onClick={onClick}>\n      {text}\n    </button>\n  )\n/*}\n\n\n\n{/* ------------------1.1-1.5-----------------------\n  const App = () => {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\nconst courseName = course.name;\n//get object-parts from course array\nconst partsArr = course.parts;\n//get value of object from parts array\nconst contentName = partsArr.map(a => a.name);\nconst contentExercise = partsArr.map(a => a.exercises);\n//exercises total calculation\nlet total = 0;\ncontentExercise.forEach((num) => total += num)\n{/*const [part1, part2, part3] = partsArr;\nconst total = part1.exercises + part2.exercises + part3.exercises;*/}\n{/*\n  return (\n    <div>\n     <Header course={courseName}/>\n     <Content contentName={contentName} contentExercise={contentExercise} />\n     <Total partsTotal={total}/>\n    </div>\n  )}\n\nconst Header = (props) =>{\n  console.log(props)\n    return(\n      <div>\n        <h3>Course Name: {props.course}</h3>\n      </div>\n    )}\n\n\nconst Content = (props) =>{\n  console.log(props)\n    return(\n  <div>\n    <p>{props.contentName[0]}: {props.contentExercise[0]}</p>\n    <p>{props.contentName[1]}: {props.contentExercise[1]}</p>\n    <p>{props.contentName[2]}: {props.contentExercise[2]}</p>\n  </div>\n    )}\n\nconst Total = (props) =>{\n    return(\n      <div>\n        <p>This course has totally {props.partsTotal} exercises.</p>\n      </div>\n    )}\n*/}\n\n\n// export default App\nexport default App\n"],"mappings":"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cD,KAAd,GAAsB,GAAvC;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAQ,eAAe,EAAEP,eAAzB;MACE,cAAc,EAAEC,cADlB;MAEE,cAAc,EAAEC;IAFlB;MAAA;MAAA;MAAA;IAAA,QAFF,eAME;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANF,eAOE,QAAC,UAAD;MAAY,IAAI,EAAEM,IAAlB;MAAwB,OAAO,EAAEC,OAAjC;MAA0C,GAAG,EAAEC,GAA/C;MAAoD,KAAK,EAAEH,KAA3D;MAAkE,GAAG,EAAEI,GAAvE;MAA4E,QAAQ,EAAEC;IAAtF;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CA5CD;;GAAMC,G;;MAAAA,G;AA+CN;EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKG;AAEH;EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMqE;AACrE;EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGG,C,CAGH;;AACA,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}