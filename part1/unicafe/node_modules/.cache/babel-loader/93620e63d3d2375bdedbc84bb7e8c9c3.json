{"ast":null,"code":"var _jsxFileName = \"/Users/filledapril/Desktop/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGoodClick = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeuClick = () => {\n    setGood(good + 1);\n  };\n\n  const handleBadClick = () => {\n    setGood(good + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoodClick,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c = App;\n{\n  /*--------------------1d------------------------\n   const History = (props) => {\n   if (props.allClicks.length === 0) {\n     return (\n       <div>\n         the app is used by pressing the buttons\n       </div>\n     )\n   }\n   return (\n     <div>\n       button press history: {props.allClicks.join(' ')}\n     </div>\n   )\n  }\n  const Button = ({handleClick, text}) => (\n       <button onClick={handleClick}>\n       {text}\n       </button>\n  )\n  const App = () => {\n   const [left, setLeft] = useState(0)\n   const [right, setRight] = useState(0)\n   const [allClicks, setAll] = useState([])\n    const handleLeftClick = () => {\n     setAll(allClicks.concat('L'))\n     setLeft(left + 1)\n   }\n    const handleRightClick = () => {\n     setAll(allClicks.concat('R'))\n     setRight(right + 1)\n   }\n    return (\n     <div>\n       {left}\n       <Button handleClick={handleLeftClick} text=\"left\"/>\n       <Button handleClick={handleRightClick} text=\"right\"/>\n       {right}\n       <History allClicks={allClicks}/>\n     </div>\n   )\n  }\n  */\n}\n{\n  /* ------------------------1c-------------------------------\n  const App = () => {\n   const [ counter, setCounter ] = useState(0);\n    const increaseByOne = () => setCounter(counter + 1);\n   const decreaseByOne = () => setCounter(counter - 1);\n   const setToZero = () => setCounter(0);\n     return (\n      <div>\n        <Display counter={counter}/>\n        <Button\n          onClick={increaseByOne}\n          text='plus'\n        />\n        <Button\n          onClick={setToZero}\n          text='zero'\n        />\n        <Button\n          onClick={decreaseByOne}\n          text='minus'\n        />\n      </div>\n    )\n  }\n  //simplyfied component\n  const Display = ({ counter }) => <div>{counter}</div>\n  \n  const Button = ({onClick, text}) => (\n     <button onClick={onClick}>\n       {text}\n     </button>\n   )\n  /*}\n  \n  {/* ------------------1.1-1.5-----------------------\n   const App = () => {\n   const course = {\n     name: 'Half Stack application development',\n     parts: [\n       {\n         name: 'Fundamentals of React',\n         exercises: 10\n       },\n       {\n         name: 'Using props to pass data',\n         exercises: 7\n       },\n       {\n         name: 'State of a component',\n         exercises: 14\n       }\n     ]\n   }\n  const courseName = course.name;\n  //get object-parts from course array\n  const partsArr = course.parts;\n  //get value of object from parts array\n  const contentName = partsArr.map(a => a.name);\n  const contentExercise = partsArr.map(a => a.exercises);\n  //exercises total calculation\n  let total = 0;\n  contentExercise.forEach((num) => total += num)\n  {/*const [part1, part2, part3] = partsArr;\n  const total = part1.exercises + part2.exercises + part3.exercises;*/\n}\n{\n  /*\n   return (\n     <div>\n      <Header course={courseName}/>\n      <Content contentName={contentName} contentExercise={contentExercise} />\n      <Total partsTotal={total}/>\n     </div>\n   )}\n  const Header = (props) =>{\n   console.log(props)\n     return(\n       <div>\n         <h3>Course Name: {props.course}</h3>\n       </div>\n     )}\n  \n  const Content = (props) =>{\n   console.log(props)\n     return(\n   <div>\n     <p>{props.contentName[0]}: {props.contentExercise[0]}</p>\n     <p>{props.contentName[1]}: {props.contentExercise[1]}</p>\n     <p>{props.contentName[2]}: {props.contentExercise[2]}</p>\n   </div>\n     )}\n  const Total = (props) =>{\n     return(\n       <div>\n         <p>This course has totally {props.partsTotal} exercises.</p>\n       </div>\n     )}\n  */\n} // export default App\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","good","setGood","neutral","setNeutral","bad","setBad","handleGoodClick","handleNeuClick","handleBadClick"],"sources":["/Users/filledapril/Desktop/part1/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodClick = () =>{\n    setGood(good + 1)\n  }\n\n  const handleNeuClick = () =>{\n    setGood(good + 1)\n  }\n\n  const handleBadClick = () =>{\n    setGood(good + 1)\n  }\n\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <button onClick={handleGoodClick}>good</button>\n      <button>neutral</button>\n      <button>bad</button>\n      <h2>Statistics</h2>\n      <p>{good}</p>\n      <p>{neutral}</p>\n      <p>{bad}</p>\n    </div>\n  )\n}\n\n\n{/*--------------------1d------------------------\n  const History = (props) => {\n  if (props.allClicks.length === 0) {\n    return (\n      <div>\n        the app is used by pressing the buttons\n      </div>\n    )\n  }\n  return (\n    <div>\n      button press history: {props.allClicks.join(' ')}\n    </div>\n  )\n}\n\nconst Button = ({handleClick, text}) => (\n      <button onClick={handleClick}>\n      {text}\n      </button>\n)\n\nconst App = () => {\n  const [left, setLeft] = useState(0)\n  const [right, setRight] = useState(0)\n  const [allClicks, setAll] = useState([])\n\n  const handleLeftClick = () => {\n    setAll(allClicks.concat('L'))\n    setLeft(left + 1)\n  }\n\n  const handleRightClick = () => {\n    setAll(allClicks.concat('R'))\n    setRight(right + 1)\n  }\n\n  return (\n    <div>\n      {left}\n      <Button handleClick={handleLeftClick} text=\"left\"/>\n      <Button handleClick={handleRightClick} text=\"right\"/>\n      {right}\n      <History allClicks={allClicks}/>\n    </div>\n  )\n}\n*/}\n\n{/* ------------------------1c-------------------------------\nconst App = () => {\n  const [ counter, setCounter ] = useState(0);\n\n  const increaseByOne = () => setCounter(counter + 1);\n  const decreaseByOne = () => setCounter(counter - 1);\n  const setToZero = () => setCounter(0);\n\n   return (\n     <div>\n       <Display counter={counter}/>\n       <Button\n         onClick={increaseByOne}\n         text='plus'\n       />\n       <Button\n         onClick={setToZero}\n         text='zero'\n       />\n       <Button\n         onClick={decreaseByOne}\n         text='minus'\n       />\n     </div>\n   )\n}\n//simplyfied component\nconst Display = ({ counter }) => <div>{counter}</div>\n\n\nconst Button = ({onClick, text}) => (\n    <button onClick={onClick}>\n      {text}\n    </button>\n  )\n/*}\n\n\n\n{/* ------------------1.1-1.5-----------------------\n  const App = () => {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\nconst courseName = course.name;\n//get object-parts from course array\nconst partsArr = course.parts;\n//get value of object from parts array\nconst contentName = partsArr.map(a => a.name);\nconst contentExercise = partsArr.map(a => a.exercises);\n//exercises total calculation\nlet total = 0;\ncontentExercise.forEach((num) => total += num)\n{/*const [part1, part2, part3] = partsArr;\nconst total = part1.exercises + part2.exercises + part3.exercises;*/}\n{/*\n  return (\n    <div>\n     <Header course={courseName}/>\n     <Content contentName={contentName} contentExercise={contentExercise} />\n     <Total partsTotal={total}/>\n    </div>\n  )}\n\nconst Header = (props) =>{\n  console.log(props)\n    return(\n      <div>\n        <h3>Course Name: {props.course}</h3>\n      </div>\n    )}\n\n\nconst Content = (props) =>{\n  console.log(props)\n    return(\n  <div>\n    <p>{props.contentName[0]}: {props.contentExercise[0]}</p>\n    <p>{props.contentName[1]}: {props.contentExercise[1]}</p>\n    <p>{props.contentName[2]}: {props.contentExercise[2]}</p>\n  </div>\n    )}\n\nconst Total = (props) =>{\n    return(\n      <div>\n        <p>This course has totally {props.partsTotal} exercises.</p>\n      </div>\n    )}\n*/}\n\n\n// export default App\nexport default App\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,CAAD,CAA9B;;EAEA,MAAMQ,eAAe,GAAG,MAAK;IAC3BL,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;EACD,CAFD;;EAIA,MAAMO,cAAc,GAAG,MAAK;IAC1BN,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;EACD,CAFD;;EAIA,MAAMQ,cAAc,GAAG,MAAK;IAC1BP,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEM,eAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eAME;MAAA,UAAIN;IAAJ;MAAA;MAAA;MAAA;IAAA,QANF,eAOE;MAAA,UAAIE;IAAJ;MAAA;MAAA;MAAA;IAAA,QAPF,eAQE;MAAA,UAAIE;IAAJ;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CA9BD;;GAAML,G;;KAAAA,G;AAiqE;AACrE;EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGG,C,CAGH;;AACA,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}