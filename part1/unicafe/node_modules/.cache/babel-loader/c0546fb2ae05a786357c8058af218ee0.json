{"ast":null,"code":"var _jsxFileName = \"/Users/filledapril/Desktop/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = props => {\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      text: \"good\",\n      num: props.good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: \"neutral\",\n      num: props.neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: \"bad\",\n      num: props.bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: \"all\",\n      num: props.total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: \"average\",\n      num: props.avg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: \"positve\",\n      num: positive,\n      marks: \"%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Statistics;\n\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Button;\n\nconst Display = _ref2 => {\n  let {\n    text,\n    num,\n    marks\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [text, \" \", num, \" \", marks]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Display;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [point, setPoint] = useState([]);\n\n  const handleGoodClick = () => {\n    setGood(good + 1);\n    setTotal(total + 1);\n    setPoint(point.concat(\"1\"));\n  };\n\n  const handleNeuClick = () => {\n    setNeutral(neutral + 1);\n    setTotal(total + 1);\n    setPoint(point.concat(\"0\"));\n  };\n\n  const handleBadClick = () => {\n    setBad(bad + 1);\n    setTotal(total + 1);\n    setPoint(point.concat(\"-1\"));\n  };\n\n  const avg = point.reduce((sum, curr) => sum + Number(curr), 0) / point.length;\n  const positive = 100 * good / total;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGoodClick,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeuClick,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBadClick,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"gG89DFhtFelPJr6RrSdJBb4UY9c=\");\n\n_c4 = App;\n{\n  /*--------------------1d------------------------\n   const History = (props) => {\n   if (props.allClicks.length === 0) {\n     return (\n       <div>\n         the app is used by pressing the buttons\n       </div>\n     )\n   }\n   return (\n     <div>\n       button press history: {props.allClicks.join(' ')}\n     </div>\n   )\n  }\n  const Button = ({handleClick, text}) => (\n       <button onClick={handleClick}>\n       {text}\n       </button>\n  )\n  const App = () => {\n   const [left, setLeft] = useState(0)\n   const [right, setRight] = useState(0)\n   const [allClicks, setAll] = useState([])\n    const handleLeftClick = () => {\n     setAll(allClicks.concat('L'))\n     setLeft(left + 1)\n   }\n    const handleRightClick = () => {\n     setAll(allClicks.concat('R'))\n     setRight(right + 1)\n   }\n    return (\n     <div>\n       {left}\n       <Button handleClick={handleLeftClick} text=\"left\"/>\n       <Button handleClick={handleRightClick} text=\"right\"/>\n       {right}\n       <History allClicks={allClicks}/>\n     </div>\n   )\n  }\n  */\n}\n{\n  /* ------------------------1c-------------------------------\n  const App = () => {\n   const [ counter, setCounter ] = useState(0);\n    const increaseByOne = () => setCounter(counter + 1);\n   const decreaseByOne = () => setCounter(counter - 1);\n   const setToZero = () => setCounter(0);\n     return (\n      <div>\n        <Display counter={counter}/>\n        <Button\n          onClick={increaseByOne}\n          text='plus'\n        />\n        <Button\n          onClick={setToZero}\n          text='zero'\n        />\n        <Button\n          onClick={decreaseByOne}\n          text='minus'\n        />\n      </div>\n    )\n  }\n  //simplyfied component\n  const Display = ({ counter }) => <div>{counter}</div>\n  \n  const Button = ({onClick, text}) => (\n     <button onClick={onClick}>\n       {text}\n     </button>\n   )\n  /*}\n  \n  {/* ------------------1.1-1.5-----------------------\n   const App = () => {\n   const course = {\n     name: 'Half Stack application development',\n     parts: [\n       {\n         name: 'Fundamentals of React',\n         exercises: 10\n       },\n       {\n         name: 'Using props to pass data',\n         exercises: 7\n       },\n       {\n         name: 'State of a component',\n         exercises: 14\n       }\n     ]\n   }\n  const courseName = course.name;\n  //get object-parts from course array\n  const partsArr = course.parts;\n  //get value of object from parts array\n  const contentName = partsArr.map(a => a.name);\n  const contentExercise = partsArr.map(a => a.exercises);\n  //exercises total calculation\n  let total = 0;\n  contentExercise.forEach((num) => total += num)\n  {/*const [part1, part2, part3] = partsArr;\n  const total = part1.exercises + part2.exercises + part3.exercises;*/\n}\n{\n  /*\n   return (\n     <div>\n      <Header course={courseName}/>\n      <Content contentName={contentName} contentExercise={contentExercise} />\n      <Total partsTotal={total}/>\n     </div>\n   )}\n  const Header = (props) =>{\n   console.log(props)\n     return(\n       <div>\n         <h3>Course Name: {props.course}</h3>\n       </div>\n     )}\n  \n  const Content = (props) =>{\n   console.log(props)\n     return(\n   <div>\n     <p>{props.contentName[0]}: {props.contentExercise[0]}</p>\n     <p>{props.contentName[1]}: {props.contentExercise[1]}</p>\n     <p>{props.contentName[2]}: {props.contentExercise[2]}</p>\n   </div>\n     )}\n  const Total = (props) =>{\n     return(\n       <div>\n         <p>This course has totally {props.partsTotal} exercises.</p>\n       </div>\n     )}\n  */\n} // export default App\n\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Display\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","Statistics","props","good","neutral","bad","total","avg","positive","Button","handleClick","text","Display","num","marks","App","setGood","setNeutral","setBad","setTotal","point","setPoint","handleGoodClick","concat","handleNeuClick","handleBadClick","reduce","sum","curr","Number","length"],"sources":["/Users/filledapril/Desktop/part1/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Statistics = (props) =>{\n  <div>\n  <Display text=\"good\" num={props.good} />\n  <Display text=\"neutral\" num={props.neutral} />\n  <Display text=\"bad\" num={props.bad} />\n  <Display text=\"all\" num={props.total}/>\n  <Display text=\"average\" num={props.avg}/>\n  <Display text=\"positve\" num={positive} marks={\"%\"}/>\n  </div>\n}\n\nconst Button = ({handleClick,text}) =>(\n    <button onClick={handleClick}>\n      {text}\n      </button>\n)\n\n\nconst Display = ({text, num, marks}) =>(\n    <div>\n      {text} {num} {marks}\n    </div>\n  )\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const[total, setTotal] = useState(0)\n  const[point, setPoint] = useState([])\n\n  const handleGoodClick = () =>{\n    setGood(good + 1)\n    setTotal(total + 1)\n    setPoint(point.concat(\"1\"))\n  }\n\n  const handleNeuClick = () =>{\n    setNeutral(neutral + 1)\n    setTotal(total + 1)\n    setPoint(point.concat(\"0\"))\n  }\n\n  const handleBadClick = () =>{\n    setBad(bad + 1)\n    setTotal(total + 1)\n    setPoint(point.concat(\"-1\"))\n  }\n\n  const avg =\n      point.reduce((sum, curr) => sum + Number(curr), 0) /\n      point.length;\n\n\n  const positive = (100 * good) /total;\n\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <Button handleClick={handleGoodClick} text=\"good\"/>\n      <Button handleClick={handleNeuClick} text=\"neutral\"/>\n      <Button handleClick={handleBadClick} text=\"bad\"/>\n      <h2>Statistics</h2>\n      <Statistics />\n    </div>\n  )\n}\n\n\n{/*--------------------1d------------------------\n  const History = (props) => {\n  if (props.allClicks.length === 0) {\n    return (\n      <div>\n        the app is used by pressing the buttons\n      </div>\n    )\n  }\n  return (\n    <div>\n      button press history: {props.allClicks.join(' ')}\n    </div>\n  )\n}\n\nconst Button = ({handleClick, text}) => (\n      <button onClick={handleClick}>\n      {text}\n      </button>\n)\n\nconst App = () => {\n  const [left, setLeft] = useState(0)\n  const [right, setRight] = useState(0)\n  const [allClicks, setAll] = useState([])\n\n  const handleLeftClick = () => {\n    setAll(allClicks.concat('L'))\n    setLeft(left + 1)\n  }\n\n  const handleRightClick = () => {\n    setAll(allClicks.concat('R'))\n    setRight(right + 1)\n  }\n\n  return (\n    <div>\n      {left}\n      <Button handleClick={handleLeftClick} text=\"left\"/>\n      <Button handleClick={handleRightClick} text=\"right\"/>\n      {right}\n      <History allClicks={allClicks}/>\n    </div>\n  )\n}\n*/}\n\n{/* ------------------------1c-------------------------------\nconst App = () => {\n  const [ counter, setCounter ] = useState(0);\n\n  const increaseByOne = () => setCounter(counter + 1);\n  const decreaseByOne = () => setCounter(counter - 1);\n  const setToZero = () => setCounter(0);\n\n   return (\n     <div>\n       <Display counter={counter}/>\n       <Button\n         onClick={increaseByOne}\n         text='plus'\n       />\n       <Button\n         onClick={setToZero}\n         text='zero'\n       />\n       <Button\n         onClick={decreaseByOne}\n         text='minus'\n       />\n     </div>\n   )\n}\n//simplyfied component\nconst Display = ({ counter }) => <div>{counter}</div>\n\n\nconst Button = ({onClick, text}) => (\n    <button onClick={onClick}>\n      {text}\n    </button>\n  )\n/*}\n\n\n\n{/* ------------------1.1-1.5-----------------------\n  const App = () => {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\nconst courseName = course.name;\n//get object-parts from course array\nconst partsArr = course.parts;\n//get value of object from parts array\nconst contentName = partsArr.map(a => a.name);\nconst contentExercise = partsArr.map(a => a.exercises);\n//exercises total calculation\nlet total = 0;\ncontentExercise.forEach((num) => total += num)\n{/*const [part1, part2, part3] = partsArr;\nconst total = part1.exercises + part2.exercises + part3.exercises;*/}\n{/*\n  return (\n    <div>\n     <Header course={courseName}/>\n     <Content contentName={contentName} contentExercise={contentExercise} />\n     <Total partsTotal={total}/>\n    </div>\n  )}\n\nconst Header = (props) =>{\n  console.log(props)\n    return(\n      <div>\n        <h3>Course Name: {props.course}</h3>\n      </div>\n    )}\n\n\nconst Content = (props) =>{\n  console.log(props)\n    return(\n  <div>\n    <p>{props.contentName[0]}: {props.contentExercise[0]}</p>\n    <p>{props.contentName[1]}: {props.contentExercise[1]}</p>\n    <p>{props.contentName[2]}: {props.contentExercise[2]}</p>\n  </div>\n    )}\n\nconst Total = (props) =>{\n    return(\n      <div>\n        <p>This course has totally {props.partsTotal} exercises.</p>\n      </div>\n    )}\n*/}\n\n\n// export default App\nexport default App\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAU;EAC3B;EAAA;IAAA,wBACA,QAAC,OAAD;MAAS,IAAI,EAAC,MAAd;MAAqB,GAAG,EAAEA,KAAK,CAACC;IAAhC;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,OAAD;MAAS,IAAI,EAAC,SAAd;MAAwB,GAAG,EAAED,KAAK,CAACE;IAAnC;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA,QAAC,OAAD;MAAS,IAAI,EAAC,KAAd;MAAoB,GAAG,EAAEF,KAAK,CAACG;IAA/B;MAAA;MAAA;MAAA;IAAA,QAHA,eAIA,QAAC,OAAD;MAAS,IAAI,EAAC,KAAd;MAAoB,GAAG,EAAEH,KAAK,CAACI;IAA/B;MAAA;MAAA;MAAA;IAAA,QAJA,eAKA,QAAC,OAAD;MAAS,IAAI,EAAC,SAAd;MAAwB,GAAG,EAAEJ,KAAK,CAACK;IAAnC;MAAA;MAAA;MAAA;IAAA,QALA,eAMA,QAAC,OAAD;MAAS,IAAI,EAAC,SAAd;MAAwB,GAAG,EAAEC,QAA7B;MAAuC,KAAK,EAAE;IAA9C;MAAA;MAAA;MAAA;IAAA,QANA;EAAA;IAAA;IAAA;IAAA;EAAA;AAQD,CATD;;KAAMP,U;;AAWN,MAAMQ,MAAM,GAAG;EAAA,IAAC;IAACC,WAAD;IAAaC;EAAb,CAAD;EAAA,oBACX;IAAQ,OAAO,EAAED,WAAjB;IAAA,UACGC;EADH;IAAA;IAAA;IAAA;EAAA,QADW;AAAA,CAAf;;MAAMF,M;;AAON,MAAMG,OAAO,GAAG;EAAA,IAAC;IAACD,IAAD;IAAOE,GAAP;IAAYC;EAAZ,CAAD;EAAA,oBACZ;IAAA,WACGH,IADH,OACUE,GADV,OACgBC,KADhB;EAAA;IAAA;IAAA;IAAA;EAAA,QADY;AAAA,CAAhB;;MAAMF,O;;AAON,MAAMG,GAAG,GAAG,MAAM;EAAA;;EAChB;EACA,MAAM,CAACZ,IAAD,EAAOa,OAAP,IAAkBhB,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACI,OAAD,EAAUa,UAAV,IAAwBjB,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACK,GAAD,EAAMa,MAAN,IAAgBlB,QAAQ,CAAC,CAAD,CAA9B;EACA,MAAK,CAACM,KAAD,EAAQa,QAAR,IAAoBnB,QAAQ,CAAC,CAAD,CAAjC;EACA,MAAK,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAjC;;EAEA,MAAMsB,eAAe,GAAG,MAAK;IAC3BN,OAAO,CAACb,IAAI,GAAG,CAAR,CAAP;IACAgB,QAAQ,CAACb,KAAK,GAAG,CAAT,CAAR;IACAe,QAAQ,CAACD,KAAK,CAACG,MAAN,CAAa,GAAb,CAAD,CAAR;EACD,CAJD;;EAMA,MAAMC,cAAc,GAAG,MAAK;IAC1BP,UAAU,CAACb,OAAO,GAAG,CAAX,CAAV;IACAe,QAAQ,CAACb,KAAK,GAAG,CAAT,CAAR;IACAe,QAAQ,CAACD,KAAK,CAACG,MAAN,CAAa,GAAb,CAAD,CAAR;EACD,CAJD;;EAMA,MAAME,cAAc,GAAG,MAAK;IAC1BP,MAAM,CAACb,GAAG,GAAG,CAAP,CAAN;IACAc,QAAQ,CAACb,KAAK,GAAG,CAAT,CAAR;IACAe,QAAQ,CAACD,KAAK,CAACG,MAAN,CAAa,IAAb,CAAD,CAAR;EACD,CAJD;;EAMA,MAAMhB,GAAG,GACLa,KAAK,CAACM,MAAN,CAAa,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGE,MAAM,CAACD,IAAD,CAAxC,EAAgD,CAAhD,IACAR,KAAK,CAACU,MAFV;EAKA,MAAMtB,QAAQ,GAAI,MAAML,IAAP,GAAcG,KAA/B;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAQ,WAAW,EAAEgB,eAArB;MAAsC,IAAI,EAAC;IAA3C;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,MAAD;MAAQ,WAAW,EAAEE,cAArB;MAAqC,IAAI,EAAC;IAA1C;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,MAAD;MAAQ,WAAW,EAAEC,cAArB;MAAqC,IAAI,EAAC;IAA1C;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eAME,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CA3CD;;GAAMV,G;;MAAAA,G;AA8CN;EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKG;AAEH;EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMqE;AACrE;EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGG,C,CAGH;;AACA,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}